"""fix_strategy_relationships

Revision ID: 88e9841690f6
Revises: 
Create Date: 2024-12-27 18:19:50.324910

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '88e9841690f6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('broker_accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('broker_id', sa.String(length=50), nullable=True),
    sa.Column('account_id', sa.String(length=100), nullable=True),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('environment', sa.String(length=10), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_connected', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_broker_accounts_id'), 'broker_accounts', ['id'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('stripe_customer_id', sa.String(), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(), nullable=True),
    sa.Column('stripe_price_id', sa.String(), nullable=True),
    sa.Column('tier', sa.Enum('STARTED', 'PLUS', 'PRO', 'LIFETIME', name='subscriptiontier'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'TRIALING', 'PAST_DUE', 'CANCELED', 'UNPAID', 'INCOMPLETE', 'INCOMPLETE_EXPIRED', name='subscriptionstatus'), nullable=True),
    sa.Column('billing_interval', sa.Enum('MONTHLY', 'YEARLY', 'LIFETIME', name='billinginterval'), nullable=True),
    sa.Column('trial_end', sa.DateTime(), nullable=True),
    sa.Column('current_period_start', sa.DateTime(), nullable=True),
    sa.Column('current_period_end', sa.DateTime(), nullable=True),
    sa.Column('cancel_at_period_end', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('canceled_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_subscription_id')
    )
    op.create_index(op.f('ix_subscriptions_id'), 'subscriptions', ['id'], unique=False)
    op.create_index(op.f('ix_subscriptions_stripe_customer_id'), 'subscriptions', ['stripe_customer_id'], unique=True)
    op.create_table('webhooks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=36), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('secret_key', sa.String(length=64), nullable=False),
    sa.Column('source_type', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_triggered', sa.DateTime(), nullable=True),
    sa.Column('allowed_ips', sa.Text(), nullable=True),
    sa.Column('max_triggers_per_minute', sa.Integer(), nullable=True),
    sa.Column('require_signature', sa.Boolean(), nullable=True),
    sa.Column('max_retries', sa.Integer(), nullable=True),
    sa.Column('retry_interval', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_webhooks_id'), 'webhooks', ['id'], unique=False)
    op.create_index(op.f('ix_webhooks_token'), 'webhooks', ['token'], unique=True)
    op.create_table('websocket_connections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('client_id', sa.String(), nullable=True),
    sa.Column('broker', sa.String(), nullable=True),
    sa.Column('environment', sa.String(), nullable=True),
    sa.Column('connected_at', sa.DateTime(), nullable=True),
    sa.Column('last_heartbeat', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_websocket_connections_client_id'), 'websocket_connections', ['client_id'], unique=True)
    op.create_index(op.f('ix_websocket_connections_id'), 'websocket_connections', ['id'], unique=False)
    op.create_table('activated_strategies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('strategy_type', sa.String(length=20), nullable=False),
    sa.Column('webhook_id', sa.String(length=36), nullable=True),
    sa.Column('ticker', sa.String(length=10), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('leader_account_id', sa.Integer(), nullable=True),
    sa.Column('leader_quantity', sa.Integer(), nullable=True),
    sa.Column('follower_quantity', sa.Integer(), nullable=True),
    sa.Column('group_name', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_triggered', sa.DateTime(), nullable=True),
    sa.Column('total_trades', sa.Integer(), nullable=True),
    sa.Column('successful_trades', sa.Integer(), nullable=True),
    sa.Column('failed_trades', sa.Integer(), nullable=True),
    sa.Column('total_pnl', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('max_drawdown', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('win_rate', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('average_win', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('average_loss', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('risk_reward_ratio', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('sharpe_ratio', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('max_position_size', sa.Integer(), nullable=True),
    sa.Column('stop_loss_percent', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('take_profit_percent', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('max_daily_loss', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('max_drawdown_limit', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('custom_settings', sa.Text(), nullable=True),
    sa.Column('broker_id', sa.String(length=50), nullable=True),
    sa.Column('broker_settings', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['broker_accounts.id'], ),
    sa.ForeignKeyConstraint(['leader_account_id'], ['broker_accounts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_activated_strategies_id'), 'activated_strategies', ['id'], unique=False)
    op.create_index(op.f('ix_activated_strategies_webhook_id'), 'activated_strategies', ['webhook_id'], unique=False)
    op.create_table('broker_credentials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('broker_id', sa.String(length=50), nullable=True),
    sa.Column('credential_type', sa.String(length=20), nullable=True),
    sa.Column('access_token', sa.Text(), nullable=True),
    sa.Column('refresh_token', sa.Text(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_valid', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['broker_accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_broker_credentials_id'), 'broker_credentials', ['id'], unique=False)
    op.create_table('payment_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subscription_id', sa.Integer(), nullable=True),
    sa.Column('stripe_payment_intent_id', sa.String(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_payment_intent_id')
    )
    op.create_index(op.f('ix_payment_history_id'), 'payment_history', ['id'], unique=False)
    op.create_table('webhook_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('webhook_id', sa.Integer(), nullable=True),
    sa.Column('triggered_at', sa.DateTime(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('payload', sa.Text(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('processing_time', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['webhook_id'], ['webhooks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_webhook_logs_id'), 'webhook_logs', ['id'], unique=False)
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('broker_order_id', sa.String(length=100), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('strategy_id', sa.Integer(), nullable=True),
    sa.Column('broker_account_id', sa.Integer(), nullable=True),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('side', sa.Enum('BUY', 'SELL', name='orderside'), nullable=False),
    sa.Column('order_type', sa.Enum('MARKET', 'LIMIT', 'STOP', 'STOP_LIMIT', name='ordertype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'WORKING', 'FILLED', 'CANCELLED', 'REJECTED', 'EXPIRED', 'PARTIALLY_FILLED', name='orderstatus'), nullable=True),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('filled_quantity', sa.Float(), nullable=True),
    sa.Column('remaining_quantity', sa.Float(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('stop_price', sa.Float(), nullable=True),
    sa.Column('average_fill_price', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.Column('filled_at', sa.DateTime(), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(), nullable=True),
    sa.Column('time_in_force', sa.String(length=10), nullable=True),
    sa.Column('error_message', sa.String(), nullable=True),
    sa.Column('broker_response', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['broker_account_id'], ['broker_accounts.id'], ),
    sa.ForeignKeyConstraint(['strategy_id'], ['activated_strategies.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_orders_broker_order_id'), 'orders', ['broker_order_id'], unique=True)
    op.create_index(op.f('ix_orders_id'), 'orders', ['id'], unique=False)
    op.create_table('strategy_followers',
    sa.Column('strategy_id', sa.Integer(), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['broker_accounts.id'], ),
    sa.ForeignKeyConstraint(['strategy_id'], ['activated_strategies.id'], )
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('strategy_followers')
    op.drop_index(op.f('ix_orders_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_broker_order_id'), table_name='orders')
    op.drop_table('orders')
    op.drop_index(op.f('ix_webhook_logs_id'), table_name='webhook_logs')
    op.drop_table('webhook_logs')
    op.drop_index(op.f('ix_payment_history_id'), table_name='payment_history')
    op.drop_table('payment_history')
    op.drop_index(op.f('ix_broker_credentials_id'), table_name='broker_credentials')
    op.drop_table('broker_credentials')
    op.drop_index(op.f('ix_activated_strategies_webhook_id'), table_name='activated_strategies')
    op.drop_index(op.f('ix_activated_strategies_id'), table_name='activated_strategies')
    op.drop_table('activated_strategies')
    op.drop_index(op.f('ix_websocket_connections_id'), table_name='websocket_connections')
    op.drop_index(op.f('ix_websocket_connections_client_id'), table_name='websocket_connections')
    op.drop_table('websocket_connections')
    op.drop_index(op.f('ix_webhooks_token'), table_name='webhooks')
    op.drop_index(op.f('ix_webhooks_id'), table_name='webhooks')
    op.drop_table('webhooks')
    op.drop_index(op.f('ix_subscriptions_stripe_customer_id'), table_name='subscriptions')
    op.drop_index(op.f('ix_subscriptions_id'), table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index(op.f('ix_broker_accounts_id'), table_name='broker_accounts')
    op.drop_table('broker_accounts')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
