"""streamline_subscription_model

Revision ID: 28aac9cac1e0
Revises: 8a251c11bfb6
Create Date: 2025-02-10 18:20:15.485604

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '28aac9cac1e0'
down_revision: Union[str, None] = '8a251c11bfb6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('subscriptions_stripe_subscription_id_key', 'subscriptions', type_='unique')
    op.drop_column('subscriptions', 'stripe_subscription_id')
    op.drop_column('subscriptions', 'status')
    op.drop_column('subscriptions', 'billing_interval')
    op.drop_column('subscriptions', 'canceled_at')
    op.drop_column('subscriptions', 'created_at')
    op.drop_column('subscriptions', 'current_period_end')
    op.drop_column('subscriptions', 'current_period_start')
    op.drop_column('subscriptions', 'updated_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('subscriptions', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('subscriptions', sa.Column('current_period_start', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('subscriptions', sa.Column('current_period_end', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('subscriptions', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('subscriptions', sa.Column('canceled_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('subscriptions', sa.Column('billing_interval', postgresql.ENUM('MONTHLY', 'YEARLY', 'LIFETIME', name='billinginterval'), autoincrement=False, nullable=True))
    op.add_column('subscriptions', sa.Column('status', postgresql.ENUM('ACTIVE', 'TRIALING', 'PAST_DUE', 'CANCELED', 'UNPAID', 'INCOMPLETE', 'INCOMPLETE_EXPIRED', name='subscriptionstatus'), autoincrement=False, nullable=True))
    op.add_column('subscriptions', sa.Column('stripe_subscription_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_unique_constraint('subscriptions_stripe_subscription_id_key', 'subscriptions', ['stripe_subscription_id'])
    # ### end Alembic commands ###
